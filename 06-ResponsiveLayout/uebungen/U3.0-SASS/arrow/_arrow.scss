$positions: top, right, bottom, left;

$inversePositions: (
  top: bottom,
  right: left,
  bottom: top,
  left: right
);

@function inversePositionOf($pos) {
  @return map-get($inversePositions, $pos);
}

@function helperPosition($pos){
  @if $pos == top or $pos == bottom {
    @return left;
  }
  @else{
    @return top;
  }
}

@mixin arrow($color: rgb(255,0,0), $borderColor: rgb(0,255,0), $size: 20px, $position: top) {
  $inverse: inversePositionOf($position);
  $helper: helperPosition($position);

  position: relative;
  background: $color;
  border: 4px solid $borderColor;
  padding: 20px;
  max-width: 150px;
  display: inline-block;

  &:after,
  &:before {
    #{$inverse}: 100%;
    #{$helper}: 50%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  &:after {
    border-color: rgba(136, 183, 213, 0);
    border-#{$inverse}-color: $color;
    border-width: $size;
    margin-#{$helper}: $size * -1;
  }

  &:before {
    border-color: rgba(194, 225, 245, 0);
    border-#{$inverse}-color: $borderColor;
    border-width: $size + 6px;
    margin-#{$helper}: ($size + 6px) * -1;
  }
}
